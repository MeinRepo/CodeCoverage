trigger:
- master

pool:
  vmImage: 'windows-latest'

steps:
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '**/*Tests.csproj'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)/AzureDevOps-CI/bin'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: DotNetCoreCLI@2
  displayName: 'Install Rerport Generator'
  inputs:
     command: 'custom'
     custom: tool
     arguments: 'install --global dotnet-reportegenerator-globaltool'

- task: DotNetCoreCLI@2
  displayName: 'Run Unit Test'
  inputs:
     command: 'test'
     custom: tool
     arguments: '--no-build --configuration Debug /p:CollectCoverage=true/p:CoverletOutputFormat-Cobertura /p:CoverletOutput=$(Build.SourcesDirectory)TestResults/Coverage/'
     publishTestResults: true
     projects: '**/*Tests.csproj'

- script: 
    reportgenrator -reports:$(Build.SourceDirectory)/**/coverage.cobertura.xml  -targertdir:$(Build.SourceDirectory)/CodeCoverage -reporterttype:Htmlinline_Azurepiplines

- task: PublishCodeCoverageResults@1
  displayName: 'Publish Code Coverage Result'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Build.SourcesDirectory)/**/coverage.cobertura.xml'

- script: echo All done
  displayName: 'All done'